name: staging

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout current repo state
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.3

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install

      - name: Load .env file
        run: |
          DOCS_ENV_FILE="$(mktemp)"
          BACKEND_ENV_FILE="$(mktemp)"

          VERCEL_ENVIRONMENT="preview"

          export VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }}
          export VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}

          export VERCEL_PROJECT_ID=${{ secrets.VERCEL_DOCS_PROJECT_ID }}
          pnpm vercel env pull "$DOCS_ENV_FILE" --yes --environment "$VERCEL_ENVIRONMENT" --token "$VERCEL_TOKEN"

          export VERCEL_PROJECT_ID=${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
          pnpm vercel env pull "$BACKEND_ENV_FILE" --yes --environment "$VERCEL_ENVIRONMENT"  --token "$VERCEL_TOKEN"

          cat "$DOCS_ENV_FILE" >> .env
          cat "$BACKEND_ENV_FILE" >> .env
          echo VERCEL_TOKEN="$VERCEL_TOKEN" >> .env
          echo VERCEL_ENVIRONMENT="$VERCEL_ENVIRONMENT" >> .env

          cat .env | grep -v '^#' | sed -E 's/^(.*)?="(.*)"/\1=\2/' >> "$GITHUB_ENV"

      - name: Build stack
        run: pnpm build

      - name: Test stack
        run: pnpm test

      - name: Deploy docs
        run: pnpm --filter @grovine/docs run deploy --target "$VERCEL_ENVIRONMENT"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_DOCS_PROJECT_ID }}

      - name: Deploy backend
        run: pnpm --filter @grovine/backend run deploy --target "$VERCEL_ENVIRONMENT"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}

 #      - name: Log in to Docker Hub
 #        uses: docker/login-action@v2
 #        with:
 #          username: ${{ secrets.DOCKERHUB_USERNAME }}
 #          password: ${{ secrets.DOCKERHUB_TOKEN }}
 # 
 #      - name: Build and push backend Docker image
 #        uses: docker/build-push-action@v4
 #        with:
 #          context: .
 #          file: ./Dockerfile.backend
 #          push: true
 #          tags: adophilus/grovine:staging
 #          platforms: linux/amd64
